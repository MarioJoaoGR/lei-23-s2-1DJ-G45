@startuml
'skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false
skinparam linetype polyline
'skinparam linetype orto

skinparam classAttributeIconSize 0

'left to right direction

class "AnnouncementController" as ctrl{
    +createVisitRequest()
    +getPropertyList()
    +getEmail()
    +getUserName()

}
class "AuthenticationRepository" as repo {
    +getInstance()
    +getCurrentSession()

}
class "UserSession" as userSession{
    +getUserId()
}

class "AuthenticationFacade" as facade {
    +getCurrentUserSession()
}

class "AnnouncementRepository" as repo2  {
    + getPropertyList(business, type, rooms)
    + sortByPriceAsc(PropertyList)
    + sortByPriceDesc(PropertyList)
    + sortByPriceParish(PropertyList)
    + sortByRecent(PropertyList)
}

class "Announcement" as announcement {
    -Int id
    -Date date
    -Double comission
    -Double price
    -Property PropertyList
    -Agent agent
    -List<VisitRequest>
    +createVisitRequest(visitRequestDTO)
    +addVisitRequest(visitRequest)
    -validateVisitRequest(visitRequest)
}

class AnnouncementUI {
}

class Repositories {
    - Repositories()
    + getInstance() : Repositories
    + getAnnouncementRepository()
}
/'class "VisitRequestMapper" as vrMapper{
    +fromDTO(VisitRequestDTO)

}'/

/'class "VisitRequestDTO" as vrDTO{
        - String date;
        - String status;
        - AgentDTO agentDTO;
        - List<String> timeSlot;
        - String userName;
        - String email;

}'/

class "AnnouncementMapper" as aMapper{
    +toDto(ListAnnouncementAvailable)
    +toDto(AnnouncementAvailable)
}
class "AnnouncementDTO" as aDTO{
private int id;
    - double comission;
    - double price;
    - Date date;
    - String businessType;
    - PropertyDTO property;
    - List<VisitRequestDTO> visitRequestList = new ArrayList<>();
    - AgentDTO agent;
    - List<OrderDTO> orderList = new ArrayList<>();
    - Integer contractDuration;
    - Double salePrice;
    - Date saleDate;
    - AgencyDTO agency;

}


class "Registered User" as UU {
    -id
    -phoneNumber
    -email
    -name
}
class "VisitRequest" as visitRequest {
     -String date;
     -String status;
     -List<String> timeSlot;
     -String userName;
     -String email;
     -Agent agent;

}




ctrl .> repo2
ctrl .-> Repositories
ctrl .-> repo
repo .-> facade
repo o-- userSession
announcement o-- visitRequest
repo2 o-- announcement
userSession <-- UU : has


Repositories -> Repositories : instance
AnnouncementUI .-> ctrl
visitRequest --> UU : made by
ctrl.> aMapper
ctrl.> aDTO
aMapper .> aDTO
/'vrMapper .> vrDTO
visitRequest .> vrDTO
visitRequest .> vrMapper'/
@enduml