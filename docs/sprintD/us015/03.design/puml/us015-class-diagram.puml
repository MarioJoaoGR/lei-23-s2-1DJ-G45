@startuml
'skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false
skinparam linetype polyline
'skinparam linetype orto

skinparam classAttributeIconSize 0

'left to right direction

class "AnnouncementController" as ctrl{
    +getVisitRequestListForAgent (startDate,endDate)
    +getClientFromSession()

}

class "ListVisitRequestUI" as UI{


}

class Repositories {
    - Repositories()
    + getInstance() : Repositories
    + getAnnouncementRepository()
}

class AnnouncementRepository {
    + getVisitRequestListForAgent (email,startDate,endDate)
    +sortByRecent(ListOfRequests)
}

class Agent{
+isAgent()
}

class VisitRequest{
    - String date;
    - Agent agent;
    - String status;
    - List<String> timeSlot;
    - String userName;
    - String email;
    - VisitRequestOpinion visitRequestOpinion=null;

    + isDateBetween(startDate,endDate)
    + isStateWaiting()
}


class "ApplicationSession" as appSession {
    +getInstance()
    +getCurrentSession()

}



class "UserSession" as userSession {
    +getClientEmail()

}

class VisitRequestMapper{
+toDto(ListOfRequests)
+toDto(VisitRequest)
}

class VisitRequestDTO{

}



class AnnouncementAvailable {
    -Int id
    -Date date
    -Double comission
    -Double price
    -Property Property
    -Agent agent
    -List<Order> Order
    -List<VisitRequest>
    +getVisitRequestListForAgent (email,startDate,endDate)




}

UI .> ctrl
ctrl.> Repositories
Repositories --> AnnouncementRepository
Repositories -> Repositories : instance
ctrl..> appSession
appSession.> userSession

VisitRequest.>VisitRequestMapper
ctrl ..> AnnouncementRepository
ctrl ..> VisitRequestMapper
ctrl ..> VisitRequestDTO
ctrl ..> userSession
ctrl ..> AnnouncementAvailable
ctrl ...> VisitRequest
VisitRequestMapper..>VisitRequestDTO
AnnouncementRepository "1" --> "*" AnnouncementAvailable : contains
AnnouncementAvailable "1" --> "*" VisitRequest : has
AnnouncementAvailable "1" --> "*" Agent : has


@enduml